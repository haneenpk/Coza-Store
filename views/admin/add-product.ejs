<%- include('../partials/adminHeader') %>

<div class="container-xxl flex-grow-1 container-p-y">
  <h4 class="fw-bold mb-4">Add product</h4>

  <!-- Basic Layout & Basic with Icons -->
  <div class="row">
    <!-- Basic Layout -->
    <div class="col-xxl">
      <a class="btn btn-primary" href="/admin/product" role="button">Back to Product</a>
      <div class="card mb-4" style="margin-top: 20px;">

        <div style="margin-top: 11px; text-align: center; font-family: 'Poppins',sans-serif;">
          <% if(typeof message !== "undefined"){ %>
          <span style="color: green; font-weight: bold;"><%= message %></span>
          <% } %>
          <% if(typeof error !== "undefined"){ %>
          <span style="color:#f00; font-weight: bold;"><%= error %></span>
          <% } %>
        </div>

        <div class="card-body">
          <form method="post" action="/admin/add-product" enctype="multipart/form-data" onsubmit="return validateForm()">
            <div class="row mb-3">
              <label class="col-sm-2 col-form-label" for="basic-default-name">Product name</label>
              <div class="col-sm-10">
                <input type="text" class="form-control" id="productName" placeholder="Product name" name="name" oninput="validateLetterField(this)" required />
              </div>
            </div>

            <div class="row mb-3">
              <label class="col-sm-2 col-form-label" for="basic-default-name">Price</label>
              <div class="col-sm-10">
                <input type="text" class="form-control" id="productPrice" placeholder="Price of the product" name="price" oninput="validateNumberInput(this)" required />
              </div>
            </div>

            <div class="row mb-3">
              <label class="col-sm-2 col-form-label" for="basic-default-name">Description</label>
              <div class="col-sm-10">
                <input type="text" class="form-control" id="productDescription" placeholder="Description of the product" name="description" oninput="validateDescription(this)" required />
              </div>
            </div>

            <div class="row mb-3">
              <label class="col-sm-2 col-form-label" for="basic-default-name">Brand</label>
              <div class="col-sm-10">
                <input type="text" class="form-control" id="productBrand" placeholder="Brand name of the product" name="brand" oninput="validateLetterField(this)" required />
              </div>
            </div>

            <div class="row mb-3">
              <label class="col-sm-2 col-form-label" for="basic-default-name">Stock</label>
              <div class="col-sm-10">
                <input type="text" class="form-control" id="productStock" placeholder="How many stock" name="stock" oninput="validateNumberInput(this)" required />
              </div>
            </div>

            <div class="row mb-3">
              <label class="col-sm-2 col-form-label" for="images">Images (up to 3):</label>
              <div class="col-sm-10">
                <input type="file" class="form-control" id="productImages" name="images" data-target-index="1" accept="image/*" multiple required />
              </div>
            </div>

            <div class="row mb-3">
              <label class="col-sm-2 col-form-label" for="basic-default-name">Category:</label>
              <div class="col-sm-10">
                <select class="form-control border border-primary" id="productCategory" name="category">
                  <% categories.forEach(category => { %>
                  <option value="<%= category._id %>"><%= category.name %></option>
                  <% }); %>
                </select><br>
              </div>
            </div>

            <div class="row justify-content-end mb-3">
              <div class="col-sm-10">
                <button type="submit" class="btn btn-primary">Add product</button>
              </div>
            </div>

            <div class="text-center">
              <span id="error-message" style="color:#f00; font-weight: bold;"></span>
            </div>

          </form>
        </div>
      </div>
    </div>
    <!-- Basic with Icons -->
  </div>
</div>
<!-- / Content -->

<div class="content-backdrop fade"></div>
</div>
<!-- Content wrapper -->
</div>
<!-- / Layout page -->
</div>

<!-- Overlay -->
<div class="layout-overlay layout-menu-toggle"></div>
</div>
<!-- / Layout wrapper -->

<!-- Core JS -->
<!-- build:js assets/vendor/js/core.js -->
<script src="../assets/vendor/libs/jquery/jquery.js"></script>
<script src="../assets/vendor/libs/popper/popper.js"></script>
<script src="../assets/vendor/js/bootstrap.js"></script>
<script src="../assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>

<script src="../assets/vendor/js/menu.js"></script>
<!-- endbuild -->

<!-- Vendors JS -->
<script src="../assets/vendor/libs/apex-charts/apexcharts.js"></script>

<!-- Main JS -->
<script src="../assets/js/main.js"></script>

<!-- Page JS -->
<script src="../assets/js/dashboards-analytics.js"></script>

<!-- Place this tag in your head or just before your close body tag. -->
<script async defer src="https://buttons.github.io/buttons.js"></script>

<script>
    function validateLetterField(input) {
    // Remove spaces at the beginning
    input.value = input.value.replace(/^\s+/g, '');

    // Allow only letters and spaces
    input.value = input.value.replace(/[^A-Za-z\s]/g, '');
  }

  function validateDescription(input) {
    // Remove spaces at the beginning
    input.value = input.value.replace(/^\s+/g, '');

    // Allow only letters, commas, and full stops
    input.value = input.value.replace(/[^A-Za-z,.\s]/g, '');
  }

  function validateNumberInput(input) {
    input.value = input.value.replace(/\D/g, ''); // Allow only digits (0-9)

    // Remove leading zeros
    input.value = input.value.replace(/^0+/, '');
  }

  function validateForm() {
    const productName = document.getElementById("productName").value;
    const productBrand = document.getElementById("productBrand").value;
    const productDescription = document.getElementById("productDescription").value;

    // Reset the error message
    displayError("", "error-message");

    // Check if any field is only whitespace or starts with a space
    if (isWhitespaceOrStartsWithSpace(productName) || isWhitespaceOrStartsWithSpace(productBrand) || isWhitespaceOrStartsWithSpace(productDescription)) {
      displayError("Product Name, Brand, and Description should contain characters only");
      return false;
    }

    // Validate characters using regex (allow only letters and spaces)
    const charRegex = /^[A-Za-z\s]+$/;
    if (!charRegex.test(productName) || !charRegex.test(productBrand)) {
      displayError("Product Name and Brand should contain letters only.");
      return false;
    }

    // Validate description field allowing letters, numbers, commas, full stops, and spaces
    const descSizeRegex = /^[A-Za-z0-9,.\s]+$/;
    if (!descSizeRegex.test(productDescription)) {
      displayError("Description should contain letters, numbers, commas, full stops, and spaces only.");
      return false;
    }

    return true;
  }

  function isWhitespaceOrStartsWithSpace(str) {
    return /^\s|\s$/.test(str);
  }

  function displayError(message, elementId = "error-message") {
    const errorElement = document.getElementById(elementId);
    if (errorElement) {
      errorElement.innerHTML = message;
    }
  }
</script>

</body>

</html>